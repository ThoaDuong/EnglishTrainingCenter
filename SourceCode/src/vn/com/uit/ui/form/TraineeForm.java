package vn.com.uit.ui.form;

import dtos.TraineeDto;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.math.BigDecimal;
import java.sql.Date;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import vn.com.uit.common.Constants;
import vn.uit.com.business.service.TraineeService;
import vn.uit.com.contracts.service.ITraineeService;
import vn.uit.com.contracts.ui.ITraineeForm;

/**
 *
 * @author Duc DV
 */
public class TraineeForm extends javax.swing.JPanel implements ITraineeForm {

    private ITraineeService _service;
    private DefaultTableModel _dm;

    /**
     * Creates new form TraineeForm
     */
    public TraineeForm() {
        initComponents();
        initialization();
        onLoading();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbTrainee = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(1000, 392));

        txtSearch.setToolTipText("");
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setText("Tìm kiếm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1000, 800));

        tbTrainee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã học viên", "Họ và tên", "Địa chỉ", "Số điện thoại", "Ngày sinh", "Ngày vào trung tâm", "Học phí đã đóng", "Điểm đầu vào"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbTrainee.setFillsViewportHeight(true);
        tbTrainee.setGridColor(new java.awt.Color(204, 204, 255));
        tbTrainee.setInheritsPopupMenu(true);
        tbTrainee.setMaximumSize(new java.awt.Dimension(32767, 32767));
        tbTrainee.setMinimumSize(new java.awt.Dimension(23, 23));
        tbTrainee.setPreferredSize(new java.awt.Dimension(1000, 800));
        tbTrainee.setRowHeight(25);
        tbTrainee.setSelectionBackground(new java.awt.Color(51, 153, 255));
        tbTrainee.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbTrainee.getTableHeader().setResizingAllowed(false);
        tbTrainee.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbTrainee);
        if (tbTrainee.getColumnModel().getColumnCount() > 0) {
            tbTrainee.getColumnModel().getColumn(0).setResizable(false);
            tbTrainee.getColumnModel().getColumn(1).setResizable(false);
            tbTrainee.getColumnModel().getColumn(2).setResizable(false);
            tbTrainee.getColumnModel().getColumn(3).setResizable(false);
            tbTrainee.getColumnModel().getColumn(4).setResizable(false);
            tbTrainee.getColumnModel().getColumn(5).setResizable(false);
            tbTrainee.getColumnModel().getColumn(6).setResizable(false);
            tbTrainee.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String query = txtSearch.getText().toLowerCase();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbTrainee;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    @Override
    public void displayListTrainee(ArrayList<TraineeDto> list) {
        if (_dm.getRowCount() != 0) {
            _dm.getDataVector().removeAllElements();
            _dm.fireTableDataChanged();
        }
        Object rowData[] = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            rowData[0] = list.get(i).getId();
            rowData[1] = list.get(i).getName();
            rowData[2] = list.get(i).getAddress();
            rowData[3] = list.get(i).getPhoneNum();
            rowData[4] = list.get(i).getBirthday();
            rowData[5] = list.get(i).getDateCreated();
            rowData[6] = list.get(i).getFeePaid().intValueExact();
            rowData[7] = list.get(i).getTestMark();
            
            _dm.addRow(rowData);

        }
    }

    @Override
    public void displayErrorMsg(String msg) {
        JOptionPane.showMessageDialog(this, msg, "Lỗi", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    public void initialization() {
        _dm = (DefaultTableModel) tbTrainee.getModel();
        _service = new TraineeService(this);
    }
    
    @Override
    public void onLoading() {
        _service.loadListTrainee();

        tbTrainee.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                int r = tbTrainee.rowAtPoint(e.getPoint());
                if (r >= 0 && r < tbTrainee.getRowCount()) {
                    tbTrainee.setRowSelectionInterval(r, r);
                } else {
                    tbTrainee.clearSelection();
                }

                int rowindex = tbTrainee.getSelectedRow();
                if (rowindex < 0) {
                    return;
                }
                if (e.isPopupTrigger() && e.getComponent() instanceof JTable) {
                    JPopupMenu popup = createPopUp();
                    popup.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
    }
    
    private void filter(String query) {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(_dm);
        tbTrainee.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter("(?i)" + query));
    }

    private JPopupMenu createPopUp() {
        JPopupMenu result = new JPopupMenu();
        JMenuItem edit = new JMenuItem("Sửa");

        edit.addActionListener((ActionEvent e) -> {
            showDetailDialog();
        });

        result.add(edit);

        return result;
    }

    private void showDetailDialog() {
        int index = tbTrainee.getSelectedRow();
        TableModel model = tbTrainee.getModel();
        
        
                
        TraineeDto trainee = new TraineeDto();
        trainee.setId((int) model.getValueAt(index, 0));
        trainee.setName((String) model.getValueAt(index, 1));
        trainee.setAddress((String) model.getValueAt(index, 2));
        trainee.setPhoneNum((String) model.getValueAt(index, 3));
        trainee.setBirthday((Date) model.getValueAt(index, 4));
        trainee.setDateCreated((Date) model.getValueAt(index, 5));
        trainee.setFeePaid(BigDecimal.valueOf((new Integer((int) model.getValueAt(index, 6))).longValue()));
        trainee.setTestMark((float) model.getValueAt(index, 7));

        JFrame main = (JFrame) SwingUtilities.getWindowAncestor(this);

        EditTraineeForm editForm = new EditTraineeForm(main, true, trainee);
        int result = editForm.showDialog();

        if (result == Constants.STATUS_OK) {
            // reload list trainee
            _service.loadListTrainee();
        }

    }
}
